<config xmlns="urn:org:jgroups"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:org:jgroups http://www.jgroups.org/schema/jgroups-4.0.xsd">

   <UDP mcast_addr="${jgroups.udp.mcast_addr:0.0.0.0}"
        mcast_port="${jgroups.udp.mcast_port:100}"
        ucast_send_buf_size="1m"
        mcast_send_buf_size="1m"
        ucast_recv_buf_size="20m"
        mcast_recv_buf_size="25m"
        ip_ttl="${jgroups.ip_ttl:2}"
        thread_naming_pattern="pl"
        enable_diagnostics="false"
        bundler_type="no-bundler"
        max_bundle_size="8500"
        thread_pool.min_threads="${jgroups.thread_pool.min_threads:0}"
        thread_pool.max_threads="${jgroups.thread_pool.max_threads:200}"
        thread_pool.keep_alive_time="60000"
   />

   <PING />

   <MERGE3 min_interval="10000"
           max_interval="30000"
   />

   <!-- *************************** -->
   <!-- DETECCION DE FALLAS         -->

   <!--
      Forma un anillo de conexiones TCP entre los miembros del cluster. Cada miembro se conecta a su vecino.
      Si una de las conexiones se corta abruptamente, entonces se marca el vecino como sospechoso
   -->
   <FD_SOCK />

   <!--
      En base a mensajes de hearthbeat detecta la ausencia de un nodo del cluster

      interval:
            intervalo en milisegundos en el que cada miembro del cluster manda un hearthbeat message en multicast
            cuando se recibe, cada miembro guarda en una tabla el timestamp actual como timestamp del sender

      timeout_check_interval:
            intervalo en milisegundos en el que se chequea el timestanmp en la tabla para ver si se supera el timeout
            En caso de que asi sea, se marca el sender como sospechoso

      timeout:
            intervalo en milisegundos en el cual si no hay informacion actualizada de los demas miembros, se envia un
            mensaje de sospecha incluyendo a los miembros en estado sospechoso
   -->
   <FD_ALL timeout="15000"
           interval="5000"
           timeout_check_interval="2000"
   />

   <!--
      Usando InetAddress.isReachable(), se detecta si todo un host cayo, anulando los participantes del cluster que
      se encuentren alli presentes.

      interval:
            intervalo en milisegundos en el que se chequea si un miembro del cluster esta vivo

      timeout:
            intervalo en milisegundos en el cual un host es considerado sospechoso, si fallo los controles de
            funcionamiento
   -->
   <FD_HOST timeout="20000"
            interval="5000"
   />

   <!--
      Verifica si realmente un miembro del cluster esta muerto.

      timeout:
            tiempo maximo que se espera una respuesta del nodo sospechoso
   -->
   <VERIFY_SUSPECT timeout="5000"
   />

   <!-- *************************** -->

   <pbcast.NAKACK2 xmit_interval="100"
                   xmit_table_num_rows="50"
                   xmit_table_msgs_per_row="1024"
                   xmit_table_max_compaction_time="30000"
                   resend_last_seqno="true"
   />

   <UNICAST3 xmit_interval="100"
             xmit_table_num_rows="50"
             xmit_table_msgs_per_row="1024"
             xmit_table_max_compaction_time="30000"
             conn_expiry_timeout="0"
   />

   <pbcast.STABLE stability_delay="500"
                  desired_avg_gossip="5000"
                  max_bytes="1M"
   />

   <pbcast.GMS print_local_addr="false"
               install_view_locally_first="true"
               join_timeout="${jgroups.join_timeout:5000}"
   />

   <UFC max_credits="2m"
        min_threshold="0.40"
   />

   <MFC max_credits="2m"
        min_threshold="0.40"
   />

   <FRAG3 frag_size="8000"/>
</config>